# Configuration options for clang-tidyhead 
# CSS Linux machines, Sep 2019: LLVM version 3.8.1
#
# usage: clang-tidy *.cpp -- -std=c++14
#
#
---
# See https://clang.llvm.org/extra/clang-tidy/#using-clang-tidy for all possible checks
Checks: '*,-hicpp-member-init,-cppcoreguidelines-pro-type-member-init,-misc-unused-parameters,-Wunused-parameter,-bugprone-easily-swappable-parameters,-readability-else-after-return,-misc-no-recursion,-llvm-else-after-return,-concurrency-mt-unsafe,-bugprone-branch-clone,-bugprone-narrowing-conversions,-cppcoreguidelines-narrowing-conversions,-altera-id-dependent-backward-branch,-fuchsia-*,-modernize-loop-convert,-llvm-include-order,-modernize-use-equals-default,
-google-build-using-namespace,-hicpp-use-equals-default,-altera-unroll-loops,-llvmlibc-callee-namespace,
-modernize-use-trailing-return-type,-llvmlibc-restrict-system-libc-headers,
-llvmlibc-implementation-in-namespace,-cppcoreguidelines-prefer-member-initializer,
-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-array-to-pointer-decay,
-google-readability-braces-around-statements,-google-build-usi$'

WarningsAsErrors: "*"
# HeaderFilterRegex: '.*'

# Based on LLVM style in https://llvm.org/docs/CodingStandards.html#the-low-level-issues
CheckOptions:
 - { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
 - { key: readability-identifier-naming.StructCase,          value: CamelCase  }
 - { key: readability-identifier-naming.EnumCase,            value: CamelCase  }
 - { key: readability-identifier-naming.VariableCase,        value: camelBack  }
 - { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }
 - { key: readability-identifier-naming.FunctionCase,        value: camelBack  }
 - { key: readability-identifier-naming.PublicMethodCase,    value: camelBack  }
 - { key: readability-identifier-naming.PrivateMethodCase,   value: camelBack  }
 - { key: readability-identifier-naming.PublicMemberCase,    value: CamelCase  }